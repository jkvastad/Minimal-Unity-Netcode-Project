Using Unity 2022.2.1f1 with Netcode 1.1.0 (1.4.0 does not work).
Install Netcode for GameObjects package: Go to Window -> PackageManager. Set Packages:Unity Registry. Search for Netcode. Selected Netcode for GameObjects. Click Install.
Make a Network Manager: Right click Hierarchy, create Create Empty. Select GameObject (the empty game object just created). In Inspector, click add component, search for "network", select Network Manager. (For naming sanity: rename GameObject to Network Manager).
Configure Network Manager: Select the game object Network Manager. In the component Network Manager go to "Select Transport..." and choose "UnityTransport". This autmatically adds the component Unity Transport and sets it as the Network Manager's Network Transport. Create a cube, give it a Network Object component. Give it a rigidbody component. Make it a prefab. Set it as player prefab.
Make a Plane: Right click Hierarchy, create 3D Object -> Plane. Select Plane. In Inspector, set position to 0,0,0.
Configure Network Transport: You can manually set Address and Port, but this is more appropriately set in-game.
Setting Connecting to IP from in-game: Create a Connection Helper script. Add it to the Network Manager Game Object. Add UI Input field and two buttons (Import TMP Essentials). Add Network Manager object to Host and Client button, set On Click functions to ConnectionHelper HostGame and ConnectToGame.
Building: Build the game via File -> Build settings. Add the sample scene via Add Open Scenes and in Player Settings... -> Resolution and Presentation -> Resolution -> Fullscreen Mode select Windowed for ease of use, e.g. 1024x768. (Once built there might be difficulties changing resolution via the default screen width/height, as the values seem to be saved to Windows registry). Build and make a folder for the build (e.g. "Build").
Testing: Anyone with the Build folder can now run the .exe and try out netcode connections, so to try it on different machines e.g. zip the folder and share it (e.g. via google drive, or a release on github). See the readme for basic use cases to try out.